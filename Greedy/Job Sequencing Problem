class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
        int d1 = 0;
        int profit = 0;
        
        for (int i = 0; i < n; i++){
            d1 = Math.max(d1,arr[i].deadline);
        }
        
        boolean[] d2 = new boolean[d1];
        
        Arrays.sort(arr,(a,b) -> b.profit - a.profit);
        
        int count = 0;
        for (int i = 0; i < n; i++){
            for (int j = arr[i].deadline - 1; j >= 0; j--){
                if (d2[j] == false){
                    d2[j] = true;
                    profit += arr[i].profit;
                    count++;
                    break;
                }
            }
        }
        
        int[] ans = new int[2];
        ans[0] = count;
        ans[1] = profit;
        return ans;
    }
}

/*
class Job {
    int id, profit, deadline;
    Job(int x, int y, int z){
        this.id = x;
        this.deadline = y;
        this.profit = z; 
    }
}
*/
